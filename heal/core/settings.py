"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 2.2.10.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
# from decouple import config
from unipath import Path
# import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = Path(__file__).parent
CORE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'eb_7_j%i-)r!^deb)z5msh+!nni#gpwly)9!!d06k+9gy7%4xk'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #django-plotly-dash config
    # 'django_plotly_dash.apps.DjangoPlotlyDashConfig',
    # 'bootstrap4',
    # 'dpd_static_support',
    # Enable the inner app
    'app', 
    'authentication', 
    # 'main', 
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #add django-plotly-dash middleware
    # 'django_plotly_dash.middleware.BaseMiddleware',
    # 'django_plotly_dash.middleware.ExternalRedirectionMiddleware',
]

ROOT_URLCONF = 'core.urls'
LOGIN_REDIRECT_URL = "home"   # Route defined in app/urls.py
LOGOUT_REDIRECT_URL = "home"  # Route defined in app/urls.py
# TEMPLATE_DIR = os.path.join(CORE_DIR, "core/templates")  # ROOT dir for templates
TEMPLATE_DIR = os.path.join(CORE_DIR, "staticfiles")

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME'  : 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

#############################################################
# SRC: https://devcenter.heroku.com/articles/django-assets

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATIC_ROOT = os.path.join(CORE_DIR, 'static')
STATIC_URL = '/static/'
# STATIC_URL = '/'

# Extra places for collectstatic to find static files.
# STATICFILES_DIRS = (
#     os.path.join(CORE_DIR, 'core/static'),
# )
# STATICFILES_DIRS = ('E:/hackathon/foodviz/HEAL/staticfiles',)
STATICFILES_DIRS = [os.path.join(CORE_DIR, "staticfiles")]
#############################################################
#############################################################

# ---------- Add Django Dash start --------------------------------

# Adding ASGI Application
# ASGI_APPLICATION = 'core.routing.application'
# X_FRAME_OPTIONS = 'SAMEORIGIN'
# # 
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# PLOTLY_COMPONENTS = [
#     'dash_core_components',
#     'dash_html_components',
#     'dash_bootstrap_components',
#     'dash_renderer',
#     'dpd_components',
#     'dpd_static_support',
#     # 'dash_table',
#     # 'dash_pivottable'
# ]

# # Staticfiles finders for locating dash app assets and related files (Dash static files)

# STATICFILES_FINDERS = [

#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#     'django_plotly_dash.finders.DashAssetFinder',
#     'django_plotly_dash.finders.DashComponentFinder',
#     'django_plotly_dash.finders.DashAppDirectoryFinder',
# ]

# PLOTLY_DASH = {
#     # Route used for the message pipe websocket connection 
#     # "ws_route" : "dpd/ws/channel",
#     # Route used for direct http insertion of pipe messages 
#     "http_route" : "dpd/views",
#     # Flag controlling existince of http poke endpoint 
#     "http_poke_enabled" : True,
#     # Insert data for the demo when migrating 
#     "insert_demo_migrations" : False,
#     # Timeout for caching of initial arguments in seconds 
#     "cache_timeout_initial_arguments": 60,
#     # Name of view wrapping function 
#     "view_decorator": None,
#     # Flag to control location of initial argument storage 
#     "cache_arguments": True,
#     # Flag controlling local serving of assets "
#     "serve_locally": True,
#     # Enable bootstrap
#     "add_bootstrap_links" : True,
#     # "view_decorator" : "django_plotly_dash.access.login_required",
#     # 'CACHE_TYPE': 'redis',
#     # 'CACHE_REDIS_URL': os.environ.get('REDIS_URL','redis://localhost:6379')
# }